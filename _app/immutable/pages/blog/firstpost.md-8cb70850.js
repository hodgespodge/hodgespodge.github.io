import{S as go,i as wo,s as yo,w as Bt,x as Jt,y as Gt,q as xt,o as Rt,B as Ct,v as _o,t as s,h as a,g as n,d as t,C as Dt,z as So,A as co,X as fo,e as h,k as b,c as u,a as p,m as g,b as c,T as o,E as Io}from"../../chunks/index-f48ee692.js";import{P as Po}from"../../chunks/post-bbcb2a87.js";import{w as Eo}from"../../chunks/index-5ca6b76d.js";import"../../chunks/TypographyProvider.styles-8e77301e.js";import{B as zo}from"../../chunks/Button-2696f64b.js";const mo=Eo(null);function Ao(v){let l;return{c(){l=s("Bonzi")},l(d){l=a(d,"Bonzi")},m(d,r){n(d,l,r)},d(d){d&&t(l)}}}function $o(v){let l,d;return l=new zo({props:{class:"bonzi-button",variant:"gradient",loading:v[1],$$slots:{default:[Ao]},$$scope:{ctx:v}}}),l.$on("click",v[0]),{c(){Bt(l.$$.fragment)},l(r){Jt(l.$$.fragment,r)},m(r,m){Gt(l,r,m),d=!0},p(r,[m]){const f={};m&2&&(f.loading=r[1]),m&16&&(f.$$scope={dirty:m,ctx:r}),l.$set(f)},i(r){d||(xt(l.$$.fragment,r),d=!0)},o(r){Rt(l.$$.fragment,r),d=!1},d(r){Ct(l,r)}}}function jo(v,l,d){let r=null,m="";mo.subscribe(k=>{r=k}),_o(()=>{r===null&&clippy.load("Bonzi",function(k){r=k,mo.set(r)})});const f=k=>new Promise(se=>setTimeout(se,k));async function w(){d(1,m="true"),console.log("animation: ",r._animator.currentAnimationName),r._animator.currentAnimationName==="Hide"||r._animator.currentAnimationName===void 0?(r.stop(),r.show(!1),console.log("revealing bonzi: ",r._animator.currentAnimationName),await f(3e3)):(r.stop(),r.hide(!1),console.log("revealing bonzi: ",r._animator.currentAnimationName),await f(3e3)),d(1,m="")}return[w,m]}class To extends go{constructor(l){super(),wo(this,l,jo,$o,yo,{toggleBonzi:0})}get toggleBonzi(){return this.$$.ctx[0]}}function Fo(v){let l,d,r,m,f,w,k,se,he,E,Ge,D,xe,Re,ue,U,Ce,pe,z,He,B,Oe,Ke,ce,A,Me,J,ae,Ne,Ve,fe,W,qe,de,$,Le,G,Ue,We,me,_,Ye,ie,Xe,Qe,le,Ze,et,x,tt,ot,be,Y,st,ge,X,at,we,S,it,R,lt,nt,ne,rt,ht,ye,j,ut,C,pt,ct,ve,H,ke,Q,ft,_e,I,dt,O,mt,bt,K,gt,wt,Se,Z,yt,Ie,y,vt,M,kt,_t,N,St,It,V,Pt,Et,q,zt,At,Pe,T,$t,re,jt,Tt,Ee,L,vo=`<code class="language-js">
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">handle</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> event<span class="token punctuation">,</span> resolve <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolve</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
      <span class="token literal-property property">ssr</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
</code>`,ze,ee,Ft,Ae;return H=new To({}),{c(){l=h("h1"),d=s("Github Pages"),r=b(),m=h("p"),f=s("If you\u2019re checking out my website, there\u2019s a good chance you\u2019re already familiar with Github Pages. If you aren\u2019t, here\u2019s your introduction: "),w=h("a"),k=s("Github Pages"),se=s(" is a service that allows you to host your website on a free domain tied to your Github account. Github Pages is a great way to host any static website (like this one). All you need is a github account."),he=b(),E=h("p"),Ge=s("The docs for Pages recommends getting started with Jekyll to generate the static website from markdown files. You can find the docs "),D=h("a"),xe=s("here"),Re=s(". Additionally, there are many open source templates available for Pages."),ue=b(),U=h("h2"),Ce=s("Svelte"),pe=b(),z=h("p"),He=s("Instead of Jekyll, I use "),B=h("a"),Oe=s("Svelte Kit"),Ke=s(" to generate the static website. Unlike some other popular frameworks, Svelte Kit compiles its JavaScript/Svelte code into optimized vanilla JavaScript."),ce=b(),A=h("p"),Me=s("This website is built off the "),J=h("a"),ae=h("code"),Ne=s("chola"),Ve=s(" template. The chola template is simple and demonstrates many of Svelte\u2019s features. It is a good starting point for building a Svelte app."),fe=b(),W=h("h2"),qe=s("Initial steps"),de=b(),$=h("p"),Le=s("Github Pages only supports static websites. Svelte is capable of generating static websites by using a static adapter. The "),G=h("a"),Ue=s("svelte.config.js"),We=s(" file is where you configure the build process. Mdsvex is a library which compiles markdown into html for svelte similar to Jekyll. The msdvex compilation step is included in the svelte.config.js file."),me=b(),_=h("p"),Ye=s("Svelte Kit uses "),ie=h("code"),Xe=s("npm run build"),Qe=s(" to compile. After compiling, I use "),le=h("code"),Ze=s("npm run deploy"),et=s(" to deploy the website to Github Pages. I use the "),x=h("a"),tt=s("gh-pages.js"),ot=s(" file to configure the remote branch where the compiled website is deployed. Additionally, we set the deployment branch in the Github repository\u2019s settings in the \u201Cpages\u201D tab."),be=b(),Y=h("h2"),st=s("Additions"),ge=b(),X=h("h4"),at=s("Bonzi"),we=b(),S=h("p"),it=s("The first big addition I made to the site was adding Bonzi the purple gorilla from the "),R=h("a"),lt=s("Clippy.js"),nt=s(" JavaScript library. To achieve this, I created a bonzi button svelte component in the "),ne=h("code"),rt=s("components"),ht=s(" directory. If the button is clicked once, bonzi appears. If the button is clicked again, the original bonzi disapears (even if the user has changed pages). To  achieve this, I use a writable store to ensure that bonzi globally accessible by each bonzi button."),ye=b(),j=h("p"),ut=s("Svelte by default enforces type checking. Since I\u2019m lazy, I didn\u2019t feel like figuring out the types for the clippy.js library. I disable type checking by creating a "),C=h("a"),pt=s("tsconfig.json"),ct=s(" file with the noImplicitAny: false."),ve=b(),Bt(H.$$.fragment),ke=b(),Q=h("h4"),ft=s("Sticky header"),_e=b(),I=h("p"),dt=s("Another change I made was to improve the header. The included Chola header works fine for short pages, but if the page is long, the user will need to scroll to return to the top of the page. I added a sticky header that disapears when the user scrolls down, but reappears when they scroll up. That way, the header doesn\u2019t block the screen, but is always available if the user needs it. I utilize the "),O=h("a"),mt=s("svelte-headroom"),bt=s(" component in the "),K=h("a"),gt=s("header file"),wt=s("."),Se=b(),Z=h("h4"),yt=s("PDF Viewer"),Ie=b(),y=h("p"),vt=s("On the "),M=h("a"),kt=s("resume page"),_t=s(" you hopefully noticed my beautifully rendered resume PDF. To serve the resume and any other PDFs (such as my upcoming co-authored publications) I created the PDF.svelte "),N=h("a"),St=s("component"),It=s(" which utilizes the "),V=h("a"),Pt=s("svelte-pdfjs"),Et=s(" package in order to render the PDF. The svelte-pdfjs package in turn wraps around Mozilla\u2019s PDFJS renderer. Funnily enough, while I was in the middle of figuring out how to use svelte-pdfjs, the repo was updated and everything broke for a few hours. I also added a download button which utilizes "),q=h("a"),zt=s("FileSaver.js"),At=s("."),Pe=b(),T=h("p"),$t=s("While I was adding PDF viewing, I also ran into difficulties with server side rendering (SSR). Apparently, Vite was attempting to build an SSR bundle which would fail because of the PDFJS renderer. Before, I was incorrectly under the assumption that the static-adapter in svelte.config.js disabled any SSR. Since the site originally worked fine with gh-pages (which doesn\u2019t do SSR to the best of my knowledge), I just assumed SSR wouldn\u2019t be a problem. After much reading through stack overflow, the only working solution I could find for disabling vite SSR building was to create a "),re=h("code"),jt=s("hooks.js"),Tt=s(" file in src with the following code:"),Ee=b(),L=h("pre"),ze=b(),ee=h("p"),Ft=s("Although this solution worked, it broke some other things so I say use with caution."),this.h()},l(e){l=u(e,"H1",{});var i=p(l);d=a(i,"Github Pages"),i.forEach(t),r=g(e),m=u(e,"P",{});var $e=p(m);f=a($e,"If you\u2019re checking out my website, there\u2019s a good chance you\u2019re already familiar with Github Pages. If you aren\u2019t, here\u2019s your introduction: "),w=u($e,"A",{href:!0,rel:!0});var Ht=p(w);k=a(Ht,"Github Pages"),Ht.forEach(t),se=a($e," is a service that allows you to host your website on a free domain tied to your Github account. Github Pages is a great way to host any static website (like this one). All you need is a github account."),$e.forEach(t),he=g(e),E=u(e,"P",{});var je=p(E);Ge=a(je,"The docs for Pages recommends getting started with Jekyll to generate the static website from markdown files. You can find the docs "),D=u(je,"A",{href:!0,rel:!0});var Ot=p(D);xe=a(Ot,"here"),Ot.forEach(t),Re=a(je,". Additionally, there are many open source templates available for Pages."),je.forEach(t),ue=g(e),U=u(e,"H2",{});var Kt=p(U);Ce=a(Kt,"Svelte"),Kt.forEach(t),pe=g(e),z=u(e,"P",{});var Te=p(z);He=a(Te,"Instead of Jekyll, I use "),B=u(Te,"A",{href:!0,rel:!0});var Mt=p(B);Oe=a(Mt,"Svelte Kit"),Mt.forEach(t),Ke=a(Te," to generate the static website. Unlike some other popular frameworks, Svelte Kit compiles its JavaScript/Svelte code into optimized vanilla JavaScript."),Te.forEach(t),ce=g(e),A=u(e,"P",{});var Fe=p(A);Me=a(Fe,"This website is built off the "),J=u(Fe,"A",{href:!0,rel:!0});var Nt=p(J);ae=u(Nt,"CODE",{});var Vt=p(ae);Ne=a(Vt,"chola"),Vt.forEach(t),Nt.forEach(t),Ve=a(Fe," template. The chola template is simple and demonstrates many of Svelte\u2019s features. It is a good starting point for building a Svelte app."),Fe.forEach(t),fe=g(e),W=u(e,"H2",{});var qt=p(W);qe=a(qt,"Initial steps"),qt.forEach(t),de=g(e),$=u(e,"P",{});var De=p($);Le=a(De,"Github Pages only supports static websites. Svelte is capable of generating static websites by using a static adapter. The "),G=u(De,"A",{href:!0,rel:!0});var Lt=p(G);Ue=a(Lt,"svelte.config.js"),Lt.forEach(t),We=a(De," file is where you configure the build process. Mdsvex is a library which compiles markdown into html for svelte similar to Jekyll. The msdvex compilation step is included in the svelte.config.js file."),De.forEach(t),me=g(e),_=u(e,"P",{});var F=p(_);Ye=a(F,"Svelte Kit uses "),ie=u(F,"CODE",{});var Ut=p(ie);Xe=a(Ut,"npm run build"),Ut.forEach(t),Qe=a(F," to compile. After compiling, I use "),le=u(F,"CODE",{});var Wt=p(le);Ze=a(Wt,"npm run deploy"),Wt.forEach(t),et=a(F," to deploy the website to Github Pages. I use the "),x=u(F,"A",{href:!0,rel:!0});var Yt=p(x);tt=a(Yt,"gh-pages.js"),Yt.forEach(t),ot=a(F," file to configure the remote branch where the compiled website is deployed. Additionally, we set the deployment branch in the Github repository\u2019s settings in the \u201Cpages\u201D tab."),F.forEach(t),be=g(e),Y=u(e,"H2",{});var Xt=p(Y);st=a(Xt,"Additions"),Xt.forEach(t),ge=g(e),X=u(e,"H4",{});var Qt=p(X);at=a(Qt,"Bonzi"),Qt.forEach(t),we=g(e),S=u(e,"P",{});var te=p(S);it=a(te,"The first big addition I made to the site was adding Bonzi the purple gorilla from the "),R=u(te,"A",{href:!0,rel:!0});var Zt=p(R);lt=a(Zt,"Clippy.js"),Zt.forEach(t),nt=a(te," JavaScript library. To achieve this, I created a bonzi button svelte component in the "),ne=u(te,"CODE",{});var eo=p(ne);rt=a(eo,"components"),eo.forEach(t),ht=a(te," directory. If the button is clicked once, bonzi appears. If the button is clicked again, the original bonzi disapears (even if the user has changed pages). To  achieve this, I use a writable store to ensure that bonzi globally accessible by each bonzi button."),te.forEach(t),ye=g(e),j=u(e,"P",{});var Be=p(j);ut=a(Be,"Svelte by default enforces type checking. Since I\u2019m lazy, I didn\u2019t feel like figuring out the types for the clippy.js library. I disable type checking by creating a "),C=u(Be,"A",{href:!0,rel:!0});var to=p(C);pt=a(to,"tsconfig.json"),to.forEach(t),ct=a(Be," file with the noImplicitAny: false."),Be.forEach(t),ve=g(e),Jt(H.$$.fragment,e),ke=g(e),Q=u(e,"H4",{});var oo=p(Q);ft=a(oo,"Sticky header"),oo.forEach(t),_e=g(e),I=u(e,"P",{});var oe=p(I);dt=a(oe,"Another change I made was to improve the header. The included Chola header works fine for short pages, but if the page is long, the user will need to scroll to return to the top of the page. I added a sticky header that disapears when the user scrolls down, but reappears when they scroll up. That way, the header doesn\u2019t block the screen, but is always available if the user needs it. I utilize the "),O=u(oe,"A",{href:!0,rel:!0});var so=p(O);mt=a(so,"svelte-headroom"),so.forEach(t),bt=a(oe," component in the "),K=u(oe,"A",{href:!0,rel:!0});var ao=p(K);gt=a(ao,"header file"),ao.forEach(t),wt=a(oe,"."),oe.forEach(t),Se=g(e),Z=u(e,"H4",{});var io=p(Z);yt=a(io,"PDF Viewer"),io.forEach(t),Ie=g(e),y=u(e,"P",{});var P=p(y);vt=a(P,"On the "),M=u(P,"A",{href:!0,rel:!0});var lo=p(M);kt=a(lo,"resume page"),lo.forEach(t),_t=a(P," you hopefully noticed my beautifully rendered resume PDF. To serve the resume and any other PDFs (such as my upcoming co-authored publications) I created the PDF.svelte "),N=u(P,"A",{href:!0,rel:!0});var no=p(N);St=a(no,"component"),no.forEach(t),It=a(P," which utilizes the "),V=u(P,"A",{href:!0,rel:!0});var ro=p(V);Pt=a(ro,"svelte-pdfjs"),ro.forEach(t),Et=a(P," package in order to render the PDF. The svelte-pdfjs package in turn wraps around Mozilla\u2019s PDFJS renderer. Funnily enough, while I was in the middle of figuring out how to use svelte-pdfjs, the repo was updated and everything broke for a few hours. I also added a download button which utilizes "),q=u(P,"A",{href:!0,rel:!0});var ho=p(q);zt=a(ho,"FileSaver.js"),ho.forEach(t),At=a(P,"."),P.forEach(t),Pe=g(e),T=u(e,"P",{});var Je=p(T);$t=a(Je,"While I was adding PDF viewing, I also ran into difficulties with server side rendering (SSR). Apparently, Vite was attempting to build an SSR bundle which would fail because of the PDFJS renderer. Before, I was incorrectly under the assumption that the static-adapter in svelte.config.js disabled any SSR. Since the site originally worked fine with gh-pages (which doesn\u2019t do SSR to the best of my knowledge), I just assumed SSR wouldn\u2019t be a problem. After much reading through stack overflow, the only working solution I could find for disabling vite SSR building was to create a "),re=u(Je,"CODE",{});var uo=p(re);jt=a(uo,"hooks.js"),uo.forEach(t),Tt=a(Je," file in src with the following code:"),Je.forEach(t),Ee=g(e),L=u(e,"PRE",{class:!0});var ko=p(L);ko.forEach(t),ze=g(e),ee=u(e,"P",{});var po=p(ee);Ft=a(po,"Although this solution worked, it broke some other things so I say use with caution."),po.forEach(t),this.h()},h(){c(w,"href","https://pages.github.com/"),c(w,"rel","nofollow"),c(D,"href","https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll"),c(D,"rel","nofollow"),c(B,"href","https://kit.svelte.dev/"),c(B,"rel","nofollow"),c(J,"href","https://github.com/sharu725/chola"),c(J,"rel","nofollow"),c(G,"href","https://github.com/hodgespodge/hodgespodge.github.io/blob/main/svelte.config.js"),c(G,"rel","nofollow"),c(x,"href","https://github.com/hodgespodge/hodgespodge.github.io/blob/main/gh-pages.js"),c(x,"rel","nofollow"),c(R,"href","https://www.smore.com/clippy-js"),c(R,"rel","nofollow"),c(C,"href","https://github.com/hodgespodge/hodgespodge.github.io/blob/main/tsconfig.json"),c(C,"rel","nofollow"),c(O,"href","https://github.com/collardeau/svelte-headroom"),c(O,"rel","nofollow"),c(K,"href","https://github.com/hodgespodge/hodgespodge.github.io/blob/main/src/lib/components/Header.svelte"),c(K,"rel","nofollow"),c(M,"href","https://hodgespodge.github.io/"),c(M,"rel","nofollow"),c(N,"href","https://github.com/hodgespodge/hodgespodge.github.io/blob/main/src/lib/components/PDF.svelte"),c(N,"rel","nofollow"),c(V,"href","https://github.com/gtm-nayan/svelte-pdfjs"),c(V,"rel","nofollow"),c(q,"href","https://github.com/eligrey/FileSaver.js"),c(q,"rel","nofollow"),c(L,"class","language-js")},m(e,i){n(e,l,i),o(l,d),n(e,r,i),n(e,m,i),o(m,f),o(m,w),o(w,k),o(m,se),n(e,he,i),n(e,E,i),o(E,Ge),o(E,D),o(D,xe),o(E,Re),n(e,ue,i),n(e,U,i),o(U,Ce),n(e,pe,i),n(e,z,i),o(z,He),o(z,B),o(B,Oe),o(z,Ke),n(e,ce,i),n(e,A,i),o(A,Me),o(A,J),o(J,ae),o(ae,Ne),o(A,Ve),n(e,fe,i),n(e,W,i),o(W,qe),n(e,de,i),n(e,$,i),o($,Le),o($,G),o(G,Ue),o($,We),n(e,me,i),n(e,_,i),o(_,Ye),o(_,ie),o(ie,Xe),o(_,Qe),o(_,le),o(le,Ze),o(_,et),o(_,x),o(x,tt),o(_,ot),n(e,be,i),n(e,Y,i),o(Y,st),n(e,ge,i),n(e,X,i),o(X,at),n(e,we,i),n(e,S,i),o(S,it),o(S,R),o(R,lt),o(S,nt),o(S,ne),o(ne,rt),o(S,ht),n(e,ye,i),n(e,j,i),o(j,ut),o(j,C),o(C,pt),o(j,ct),n(e,ve,i),Gt(H,e,i),n(e,ke,i),n(e,Q,i),o(Q,ft),n(e,_e,i),n(e,I,i),o(I,dt),o(I,O),o(O,mt),o(I,bt),o(I,K),o(K,gt),o(I,wt),n(e,Se,i),n(e,Z,i),o(Z,yt),n(e,Ie,i),n(e,y,i),o(y,vt),o(y,M),o(M,kt),o(y,_t),o(y,N),o(N,St),o(y,It),o(y,V),o(V,Pt),o(y,Et),o(y,q),o(q,zt),o(y,At),n(e,Pe,i),n(e,T,i),o(T,$t),o(T,re),o(re,jt),o(T,Tt),n(e,Ee,i),n(e,L,i),L.innerHTML=vo,n(e,ze,i),n(e,ee,i),o(ee,Ft),Ae=!0},p:Io,i(e){Ae||(xt(H.$$.fragment,e),Ae=!0)},o(e){Rt(H.$$.fragment,e),Ae=!1},d(e){e&&t(l),e&&t(r),e&&t(m),e&&t(he),e&&t(E),e&&t(ue),e&&t(U),e&&t(pe),e&&t(z),e&&t(ce),e&&t(A),e&&t(fe),e&&t(W),e&&t(de),e&&t($),e&&t(me),e&&t(_),e&&t(be),e&&t(Y),e&&t(ge),e&&t(X),e&&t(we),e&&t(S),e&&t(ye),e&&t(j),e&&t(ve),Ct(H,e),e&&t(ke),e&&t(Q),e&&t(_e),e&&t(I),e&&t(Se),e&&t(Z),e&&t(Ie),e&&t(y),e&&t(Pe),e&&t(T),e&&t(Ee),e&&t(L),e&&t(ze),e&&t(ee)}}}function Do(v){let l,d;const r=[v[0],bo];let m={$$slots:{default:[Fo]},$$scope:{ctx:v}};for(let f=0;f<r.length;f+=1)m=Dt(m,r[f]);return l=new Po({props:m}),{c(){Bt(l.$$.fragment)},l(f){Jt(l.$$.fragment,f)},m(f,w){Gt(l,f,w),d=!0},p(f,[w]){const k=w&1?So(r,[w&1&&co(f[0]),w&0&&co(bo)]):{};w&2&&(k.$$scope={dirty:w,ctx:f}),l.$set(k)},i(f){d||(xt(l.$$.fragment,f),d=!0)},o(f){Rt(l.$$.fragment,f),d=!1},d(f){Ct(l,f)}}}const bo={layout:"post",title:"How I made this website",slug:"first-post",description:"In this post, I will demonstrate how I created this website using the svelte framework and github pages for hosting.",tags:[],date:"June 22 2022"};function Bo(v,l,d){return v.$$set=r=>{d(0,l=Dt(Dt({},l),fo(r)))},l=fo(l),[l]}class Ho extends go{constructor(l){super(),wo(this,l,Bo,Do,yo,{})}}export{Ho as default,bo as metadata};
